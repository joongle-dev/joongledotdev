name: Build, Test and Deploy

on:
    push:
        branches:
          - main
        paths-ignore:
          - 'crates-wasm32/**'

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
          - name: Checkout code
            uses: actions/checkout@v3

          - name: Install Rust
            uses: moonrepo/setup-rust@v1.0.1

          - name: Build and test code
            run: |
                cd crates
                cargo build --verbose
                cargo test --verbose

          - name: Set up Docker Buildx
            uses: docker/setup-buildx-action@v2

          - name: Log in to Docker Hub
            uses: docker/login-action@v2
            with:
                username: ${{ secrets.DOCKER_USERNAME }}
                password: ${{ secrets.DOCKER_PASSWORD }}
    
          - name: Build and push Docker images
            uses: docker/bake-action@v3.1.0
            with:
                push: true
                set: |
                    *.cache-from=type=gha
                    *.cache-to=type=gha,mode=max
                files: |
                    docker-compose.yaml
          
    deploy:
        needs: build
        runs-on: ubuntu-latest
        steps:
          - name: Checkout code
            uses: actions/checkout@v3
            
          - name: Log in to Docker Hub
            uses: docker/login-action@v2
            with:
                username: ${{ secrets.DOCKER_USERNAME }}
                password: ${{ secrets.DOCKER_PASSWORD }}

          - name: Configure SSH
            run: |
              mkdir -p -m 700 ~/.ssh/
              install -m 600 /dev/null ~/.ssh/id_ed25519
              echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
              install -m 640 /dev/null ~/.ssh/known_hosts
              echo "${{ secrets.SSH_KNOWN_HOSTS }}" > ~/.ssh/known_hosts

          - name: Copy docker-compose.yml to droplet
            run: scp docker-compose.yaml ${{ secrets.SSH_USERNAME }}@${{ vars.SERVER_HOSTNAME }}:~

          - name: Deploy
            run: ssh ${{ secrets.SSH_USERNAME }}@${{ vars.SERVER_HOSTNAME }} "docker compose down && docker compose pull && docker compose up -d"