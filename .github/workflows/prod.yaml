name: Build, Test and Deploy

on:
    push:
        branches:
          - main

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
          - name: Checkout code
            uses: actions/checkout@v3

          - name: Install Rust
            uses: moonrepo/setup-rust@v1.0.1

          - name: Build and test code
            run: |
                cargo build --verbose
                cargo test --verbose

          - name: Set up Docker Buildx
            uses: docker/setup-buildx-action@v2

          - name: Log in to Docker Hub
            uses: docker/login-action@v2
            with:
                username: ${{ secrets.DOCKER_USERNAME }}
                password: ${{ secrets.DOCKER_PASSWORD }}
    
          - name: Build and push Docker images
            uses: docker/bake-action@v3.1.0
            with:
                push: true
                set: |
                    *.cache-from=type=gha
                    *.cache-to=type=gha,mode=max
                files: |
                    docker-compose.yaml
          
    deploy:
        needs: build
        runs-on: ubuntu-latest
        steps:
          - name: Checkout code
            uses: actions/checkout@v3
            
          - name: Log in to Docker Hub
            uses: docker/login-action@v2
            with:
                username: ${{ secrets.DOCKER_USERNAME }}
                password: ${{ secrets.DOCKER_PASSWORD }}
      
          - name: Install sshpass
            run: sudo apt-get install sshpass

          - name: Copy docker-compose.yml to droplet
            run: sshpass -v -p ${{ secrets.DROPLET_PASSWORD }} scp -o StrictHostKeyChecking=no docker-compose.yaml root@${{ vars.DROPLET_IP }}:~
    
          - name: Deploy
            uses: appleboy/ssh-action@master
            with:
                host: ${{ vars.DROPLET_IP }}
                username: root
                password: ${{ secrets.DROPLET_PASSWORD }}
                script: |
                    cd ~
                    docker compose down
                    docker compose pull
                    docker compose run --rm --service-ports -d -v ${{ vars.TLS_CERT_FILE }}:/certs/cert.pem -v ${{ vars.TLS_KEY_FILE }}:/certs/key.pem web